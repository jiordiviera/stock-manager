<?php

namespace App\Filament\Resources;

use App\Filament\Resources\ProduitResource\Pages;
use App\Filament\Resources\ProduitResource\RelationManagers;
use App\Models\Produit;
use Filament\Actions\ActionGroup;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class ProduitResource extends Resource
{
    protected static ?string $model = Produit::class;

    public static function getWidgets(): array
    {
        return parent::getWidgets(); // TODO: Change the autogenerated stub
    }

    public static function getGloballySearchableAttributes(): array
    {
        return ['nom'];
    }

    public static function getGlobalSearchResultTitle(Model $record): string|Htmlable
    {
        return $record->nom; // TODO: Change the autogenerated stub
    }

    protected static ?string $navigationIcon = 'heroicon-s-squares-2x2';

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Fieldset::make('Informations sur le produit')->schema([

                    Forms\Components\Group::make()->schema([
                        Forms\Components\TextInput::make('nom')
                            ->label('Nom du produit')
                            ->required(),
                        Forms\Components\TextInput::make('prix')
                            ->label('Prix du produit')
                            ->required()
                            ->suffix('FCFA')
                            ->numeric(),
                        Forms\Components\TextInput::make('quantite')
                            ->label('Quantité du produit')
                            ->required()
                            ->disabledOn('edit')
                            ->default(1)
                            ->numeric(),
                    ])->columns(3)->columnSpanFull(),
                ]),

                Forms\Components\Fieldset::make()->schema([
                    Forms\Components\DateTimePicker::make('created_at')
                        ->label('Date d\'ajout')
                        ->required()
                        ->default(now())
                        ->format('Y-m-d H:i'),
                    Forms\Components\FileUpload::make('image')
                        ->label('Photo(s) du produit')
                        ->image()
                        ->multiple()
                        ->openable()
                        ->maxFiles(5)
                        ->reorderable()
                        ->directory('produits'),


                ])->columns(1)->columnSpanFull(),
                Forms\Components\MarkdownEditor::make('description')
                    ->label('Description du produit')
                    ->columnSpanFull()
                    ->placeholder('Entrez ici une description sur le produit')
                    ->fileAttachmentsDirectory('produits'),


            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('nom')
                    ->label('Nom du produit'),
                Tables\Columns\TextColumn::make('prix')
                    ->label('Prix du produit')
                    ->money('XAF', true),
                Tables\Columns\TextColumn::make('quantite')
                    ->label('Quantité du produit')
                    ->fontFamily('monospace'),
                Tables\Columns\ImageColumn::make('image')
                    ->defaultImageUrl(asset('images/vide.jpg'))
//                        ->defaultView('images/default.blade.php')
                    ->label('Photo du produit'),
                Tables\Columns\TextColumn::make('created_at')
                    ->label('Date d\'ajout')
                    ->toggleable(isToggledHiddenByDefault: true)
                    ->dateTime('Y-m-d H:i:s'),
            ])
            ->emptyStateHeading('Aucun produit')
            ->emptyStateActions([
                Tables\Actions\Action::make('create')
                    ->label('Ajouter un nouveau produit')
                    ->url(static::getUrl('create'))
                    ->icon('heroicon-s-plus')
                    ->button(),
            ])
            ->emptyStateDescription('Cliquez sur le bouton ci-dessus pour ajouter un nouveau produit.')
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\ActionGroup::make([
                    Tables\Actions\ViewAction::make(),
                    Tables\Actions\EditAction::make()
                        ->label('Modifier'),
                ]),
            ]);
    }

    public static function getRelations(): array
    {
        return [
            RelationManagers\ArrivageRelationManager::class,
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListProduits::route('/'),
            'create' => Pages\CreateProduit::route('/create'),
            'view' => Pages\ViewProduit::route('/{record}'),
            'edit' => Pages\EditProduit::route('/{record}/edit'),
        ];
    }
}
